import logging
import random
from aiogram import Bot, Dispatcher, types
from collections import defaultdict
import os
import asyncio
from aiohttp import web

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TOKEN = os.getenv("TOKEN")
CHAT_ID = os.getenv("CHAT_ID")  # ID –≥—Ä—É–ø–ø—ã

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
user_attempts = defaultdict(int)

# --- –°–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–æ–≤ (50 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ ‚âà 10%) ---
prizes = [
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéÅ –°–∫–∏–¥–∫–∞ 5% –Ω–∞ –∑–∞–∫–∞–∑",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéÅ –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –∑–∞–∫–∞–∑",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéâ –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –∑–∞–∫–∞–∑ –æ—Ç 20–∫",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéÅ –ó–∞–∫–∞–∑ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üöö –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéâ–°–∫–∏–¥–∫–∞ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é 50%",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéâ–°–∫–∏–¥–∫–∞ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é 50%",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéâ–°–∫–∏–¥–∫–∞ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é 50%",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéÅ –ó–∞–∫–∞–∑ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "üéÅ –ó–∞–∫–∞–∑ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ...",
    "‚ùå –ù–µ –ø–æ–≤–µ–∑–ª–æ..."
]

# --- –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ---
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.reply(
        """üé° –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã!*

–¢—ã –º–æ–∂–µ—à—å –∫—Ä—É—Ç–∞–Ω—É—Ç—å –∫–æ–ª–µ—Å–æ *3 —Ä–∞–∑–∞*.
–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É –∏ –∑–∞–±–µ—Ä–∏ —Å–≤–æ–π –ø—Ä–∏–∑!üî•

–ù–∞–∂–º–∏ /spin —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å üçÄ""",
        parse_mode="Markdown"
    )

@dp.message_handler(commands=['spin'])
async def spin_handler(message: types.Message):
    user_id = message.from_user.id
    if user_attempts[user_id] >= 3:
        await message.reply("‚õîÔ∏è –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏. –¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤—Å–µ 3 –ø—Ä–æ–∫—Ä—É—Ç–∞.")
        return

@dp.message_handler(commands=['ping'])
async def ping_handler(message: types.Message):
    await message.reply("üèì Pong! –ë–æ—Ç –Ω–∞ —Å–≤—è–∑–∏.")

    prize = random.choice(prizes)
    user_attempts[user_id] += 1

    if "‚ùå" in prize:
        await message.reply(f"üé° –ö—Ä—É—Ç–∏–º –∫–æ–ª–µ—Å–æ...\n\n{prize}")
    else:
        await message.reply(
            f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –≤—ã–∏–≥—Ä–∞–ª:\n{prize}\n\n"
            "‚ùóÔ∏è*–í–ê–ñ–ù–û* ‚Äî —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–≤–æ–µ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –¥–æ *30.09.2025*.\n"
            "–ù–∞–ø–æ–º–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É @dadmaksi –æ —Å–≤–æ—ë–º –ø—Ä–∏–∑–µ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.",
            parse_mode="Markdown"
        )
        if CHAT_ID:
            try:
                await bot.send_message(
                    CHAT_ID,
                    f"üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username or message.from_user.full_name} "
                    f"–≤—ã–∏–≥—Ä–∞–ª: {prize}"
                )
            except Exception as e:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç: {e}")

# --- WEB SERVER ---
async def handle(request):
    return web.Response(text="Bot is running")

async def start_webserver():
    app = web.Application()
    app.add_routes([web.get('/', handle)])
    runner = web.AppRunner(app)
    await runner.setup()
    port = int(os.environ.get("PORT", 8000))
    site = web.TCPSite(runner, '0.0.0.0', port)
    await site.start()

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ ---
async def main():
    logging.basicConfig(level=logging.INFO)
    await asyncio.gather(
        start_webserver(),
        dp.start_polling()
    )

if __name__ == '__main__':
    asyncio.run(main())
